{"componentChunkName":"component---src-templates-blog-post-js","path":"/algorithm/concept/what-is-monotonic-stack/","result":{"data":{"site":{"siteMetadata":{"title":"JIKOID","description":"천천히 그리고 꾸준히"}},"markdownRemark":{"id":"b5f68180-d1fa-571f-817b-0e149ccd9af7","excerpt":"Monotonic Stack…","html":"<h2 id=\"monotonic-stack-단조-스택-알고리즘이란\">Monotonic Stack (단조 스택) 알고리즘이란</h2>\n<p><code class=\"language-text\">Monotonic Stack</code> 이란 원소가 <code class=\"language-text\">Increasing</code> 또는 <code class=\"language-text\">Decreasing</code> 으로 정렬이 되어있는 배열을 의미 한다.</p>\n<p>이름에서 사용되는 <code class=\"language-text\">monotone</code> 의 뜻은 단조로운 모양을 말하며 배열에서 단조로운 모양이라고 하면 모든 배열의 원소가 증가 또는 감소 하는 배열을 의미하게 된다.</p>\n<p>예를 들어, <code class=\"language-text\">[1, 2, 3, 4, 5]</code> 또는 <code class=\"language-text\">[5, 4, 3, 2, 1]</code> 과 같은 배열을 <code class=\"language-text\">Monotonic Stack</code> 이라고 부를 수 있다.</p>\n<br>\n<h2 id=\"monotonic-stack-의-활용\">Monotonic Stack 의 활용</h2>\n<p>Monotonic Stack 은 언제 활용이 될까?</p>\n<p>주로 <code class=\"language-text\">Next Greater Eelement</code> 또는 <code class=\"language-text\">Previous Greater Eelement</code> 와 같은 유형의 문제에서 주로 사용된다고 한다.</p>\n<p>쉽게 말해서 다음에 올 원소가 이전 원소보다 큰 값이 되어야 하는 경우 또는 이전의 원소가 더 큰지 확인하는 경우에 주로 사용하게 된다.</p>\n<p>예를 들어, <code class=\"language-text\">[1, 5, 2, 4, 3]</code> 이라는 배열이 있을 때 <code class=\"language-text\">Next Greater Eelement</code> 의 문제가 주어진다고 할 경우</p>\n<p>스택에 첫 번째 원소가 먼저 들어온다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">stack <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>다음 두 번째 원소인 <code class=\"language-text\">5</code> 가 들어와야 하는데 스택의 마지막 원소인 <code class=\"language-text\">1</code> 보다 <code class=\"language-text\">5</code> 가 더 크기 때문에 stack 에 넣어준다. (1 &#x3C; 5)</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">stack <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>다음 원소인 <code class=\"language-text\">2</code> 가 들어와야 하는데 stack 의 마지막 원소인 <code class=\"language-text\">5</code> 가 더 크기 때문에 <code class=\"language-text\">5</code> 를 <code class=\"language-text\">pop()</code> 하고 <code class=\"language-text\">2</code> 를 넣어준다. (5 > 2)</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">stack <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># pop(5)</span></code></pre></div>\n<p>다음 원소인 <code class=\"language-text\">4</code> 가 들어와야 하는데 stack 의 마지막 원소인 <code class=\"language-text\">2</code> 보다 크기 때문에 stack 에 넣어준다. (2 &#x3C; 4)</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">stack <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>마지막 원소인 <code class=\"language-text\">3</code> 이 들어와야 하는데 stack 의 마지막 원소인 <code class=\"language-text\">4</code> 가 더 크기 때문에 <code class=\"language-text\">4</code> 를 <code class=\"language-text\">pop()</code> 하고 <code class=\"language-text\">3</code> 을 넣어준다. (4 > 2)</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">stack <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># pop(4)</span></code></pre></div>\n<p>그 결과 Monotonic Stack 은 <code class=\"language-text\">[1, 2, 3]</code> 이 된다.</p>\n<br>\n<h2 id=\"monotonic-stack-구현해보기\">Monotonic Stack 구현해보기</h2>\n<p>그럼 위의 예를 아래와 같이 간단한게 구현해볼 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\nstack <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> num <span class=\"token keyword\">in</span> arr<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">while</span> stack <span class=\"token keyword\">and</span> stack<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> num<span class=\"token punctuation\">:</span>\n        stack<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    stack<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span>\n    \n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>stack<span class=\"token punctuation\">)</span></code></pre></div>\n<p>위와 같이 간단하게 구현해볼 수 있고 직접 과정을 print 해보면 다음과 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">stack <span class=\"token operator\">=</span>  <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>  <span class=\"token operator\">|</span> num <span class=\"token operator\">=</span>  <span class=\"token number\">1</span> <span class=\"token comment\"># 비어있는 스택에 추가</span>\nappend <span class=\"token operator\">=</span>  <span class=\"token number\">1</span>\n\nstack <span class=\"token operator\">=</span>  <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>  <span class=\"token operator\">|</span> num <span class=\"token operator\">=</span>  <span class=\"token number\">5</span> <span class=\"token comment\"># 1 &lt; 5 이므로 5 추가</span>\nappend <span class=\"token operator\">=</span>  <span class=\"token number\">5</span>\n\nstack <span class=\"token operator\">=</span>  <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span>  <span class=\"token operator\">|</span> num <span class=\"token operator\">=</span>  <span class=\"token number\">2</span> <span class=\"token comment\"># 5 > 1 이므로 5를 꺼내고 2 추가</span>\npop <span class=\"token operator\">=</span>  <span class=\"token number\">5</span>\nappend <span class=\"token operator\">=</span>  <span class=\"token number\">2</span>\n\nstack <span class=\"token operator\">=</span>  <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span>  <span class=\"token operator\">|</span> num <span class=\"token operator\">=</span>  <span class=\"token number\">4</span>  <span class=\"token comment\"># 2 &lt; 4 이므로 4 추가</span>\nappend <span class=\"token operator\">=</span>  <span class=\"token number\">4</span>\n\nstack <span class=\"token operator\">=</span>  <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>  <span class=\"token operator\">|</span> num <span class=\"token operator\">=</span>  <span class=\"token number\">3</span> <span class=\"token comment\"># 4 > 3 이므로 4를 꺼내고 3 추가</span>\npop <span class=\"token operator\">=</span>  <span class=\"token number\">4</span>\nappend <span class=\"token operator\">=</span>  <span class=\"token number\">3</span>\n\nresult <span class=\"token operator\">=</span>  <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span></code></pre></div>\n<br>\n<h2 id=\"monotoinc-stack-관련-문제-목록\">Monotoinc Stack 관련 문제 목록</h2>\n<ul>\n<li><a href=\"https://leetcode.com/problems/remove-k-digits/description/\">Leetcode 402. Remove K Digits</a></li>\n<li><a href=\"https://leetcode.com/problems/daily-temperatures/description/\">Leetcode 739. Daily Temperatures</a></li>\n</ul>\n<br>\n<h2 id=\"레퍼런스\">레퍼런스</h2>\n<p><a href=\"https://velog.io/@phantom5087/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EA%B0%9C%EB%85%90%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0-Monotone-Stack\">https://velog.io/@phantom5087/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EA%B0%9C%EB%85%90%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0-Monotone-Stack</a></p>","frontmatter":{"title":"Monotonic Stack (단조 스택) 알고리즘 이해하기","date":"2024년 07월 19일","description":"Monotonic Stack (단조 스택) 알고리즘에 대해서 공부하고 정리한 내용입니다.","tags":["algorithm","monotonic","stack"],"categories":"algorithm/concept"},"tableOfContents":"<ul>\n<li><a href=\"#monotonic-stack-%EB%8B%A8%EC%A1%B0-%EC%8A%A4%ED%83%9D-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EC%9D%B4%EB%9E%80\">Monotonic Stack (단조 스택) 알고리즘이란</a></li>\n<li><a href=\"#monotonic-stack-%EC%9D%98-%ED%99%9C%EC%9A%A9\">Monotonic Stack 의 활용</a></li>\n<li><a href=\"#monotonic-stack-%EA%B5%AC%ED%98%84%ED%95%B4%EB%B3%B4%EA%B8%B0\">Monotonic Stack 구현해보기</a></li>\n<li><a href=\"#monotoinc-stack-%EA%B4%80%EB%A0%A8-%EB%AC%B8%EC%A0%9C-%EB%AA%A9%EB%A1%9D\">Monotoinc Stack 관련 문제 목록</a></li>\n<li><a href=\"#%EB%A0%88%ED%8D%BC%EB%9F%B0%EC%8A%A4\">레퍼런스</a></li>\n</ul>","timeToRead":2}},"pageContext":{"slug":"/algorithm/concept/what-is-monotonic-stack/","previous":{"fields":{"slug":"/algorithm/concept/what-is-binary-search/"},"frontmatter":{"title":"Binary Search (이진 탐색) 알고리즘 이해하기","categories":"algorithm/concept"}},"next":{"fields":{"slug":"/algorithm/concept/what-is-union-find/"},"frontmatter":{"title":"Union-Find 알고리즘 이해하기","categories":"algorithm/concept"}}}},"staticQueryHashes":["1128308798","2390591302","4172325373"],"slicesMap":{}}